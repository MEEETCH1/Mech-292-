/* RC_Bluetooth_2018_v6
 * By:    Khamlek HOMSOMBATH
 * Date:  Jan 17, 2018
 * Download Controller for Android : https://play.google.com/store/apps/details?id=com.lekpkd.duinojoy
 */
 #include <Servo.h>

Servo myservo;  // create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;    // variable to store the servo position

#include <SoftwareSerial.h>

// arduino>>bluetooth
// D10 (as RX)   >>>  Tx
// D11 (as TX)  >>>  Rx
SoftwareSerial bluetooth(0, 1); // RX, TX
#define PWMA 3
#define AIN2 7
#define AIN1 8
#define STBY 2
#define BIN1 12
#define BIN2 13
#define PWMB 5

void setup() {
    myservo.attach(10);
  Serial.begin(19200); 
  bluetooth.begin(9600);
  
  pinMode(PWMA,OUTPUT); // PWM A
  pinMode(PWMB,OUTPUT); // PWM B
  pinMode(BIN1,OUTPUT); // B
  pinMode(BIN2,OUTPUT); // B
  pinMode(AIN1,OUTPUT); // A
  pinMode(AIN2,OUTPUT); // A
  pinMode(STBY,OUTPUT); // STBY

  digitalWrite(STBY,1);

  analogWrite(PWMA, 0);
  analogWrite(PWMB, 0);
}

String data = "";
void loop() {
  while(bluetooth.available()){
    char a = bluetooth.read();
    if(a==')') {
      setData(data);
      data = "";
      return;
    }
    data += a;
  }
}

int ledVal = 0;
void setData(String data){
  data.trim();

  int index = data.indexOf(",");
  if(index != -1){
    int angle = data.substring(0,index).toInt();
    int strength = data.substring(index + 1).toInt();

    digitalWrite(BIN1,0);
    digitalWrite(BIN2,0);
    digitalWrite(AIN1,0);
    digitalWrite(AIN2,0);
    if (angle < 180){
      digitalWrite(BIN1,1);
      digitalWrite(AIN1,1);

      if(angle < 90){
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * (angle * 255 / 90) / 100);
      }else if(angle > 90){
        analogWrite(PWMA, strength * ((180 - angle) * 255 / 90) / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }else{
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }
    }else if(angle > 180){
      digitalWrite(BIN2,1);
      digitalWrite(AIN2,1);
      
      if(angle > 270){
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * ((360 - angle) * 255 / 90) / 100);
      }else if(angle < 270){
        analogWrite(PWMA, strength * ((90 - (270 - angle)) * 255 / 90) / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }else{
        analogWrite(PWMA, strength * 255 / 100);
        analogWrite(PWMB, strength * 255 / 100);
      }
    }
    return;
  }

  if(data.equals("a")){
   pos = 135;
   myservo.write (pos);
Serial.println("135");
delay (20);
  }
  
  if(data.equals("b")){
   pos = 0;
   myservo.write (pos);
Serial.println("0");
delay (20);
  }
  
  
  Serial.print("Recieved: ");
  Serial.println(data);
}
Serial.println("/For motor A 1 = slow foward, 2 fast foward, 5, 6 same, 0 to stop");
Serial.println("/For motor B 3 = slow foward, 4 fast foward, 7, 8 same, 9 to stop");
}

void loop() {
  if (Serial.available())

{
state = Serial.read();        //Read the incoming data & store into data
      Serial.print(state);          //Print Value inside data in Serial monitor
      Serial.print("\n");        

  if (state=='e'){
  pos = 80;
myservo.write (pos);
Serial.println("75");
delay (20);
  }
  if (state=='d'){
  pos = 135;
myservo.write (pos);
Serial.println("135");
delay (20);
  }
if (state=='1'){
  move(1, 255, 1);
  }
if  (state=='2'){
  move(2, 255, 2);
  }
  if (state=='3'){
  move(1, 255, 2);
  }
   if (state=='4'){
  move(2, 255, 1);
  }
  
  if (state=='0'){
  move(1, 0, 1);
  }
  if (state=='9'){
  move(2, 0, 1);
  }
  
}
}
void move(int motor, int speed, int direction){
//Move specific motor at speed and direction
//motor: 0 for B 1 for A
//speed: 0 is off, and 255 is full speed
//direction: 0 clockwise, 1 counter-clockwise

digitalWrite(STBY, HIGH); //disable standby

boolean inPin1 = LOW;
boolean inPin2 = HIGH;

if(direction == 1){
inPin1 = HIGH;
inPin2 = LOW;
}
if(direction == 2){
inPin1 = LOW;
inPin2 = HIGH;
}
if(direction == 3){
inPin1 = LOW;
inPin2 = LOW;
}

if(motor == 1){
digitalWrite(AI1, inPin1);
digitalWrite(AI2, inPin2);
analogWrite(PWMA, speed);
}
if(motor == 2){
digitalWrite(BI1, inPin1);
digitalWrite(BI2, inPin2);
analogWrite(PWMB, speed);
}
}
